"""
This module provides functionality to rank triangles in the OEIS database based on their impact.
More specifically, the ranking is based on the number of distinct sequences that can be generated 
by a fixed pool of elementary transformations mapping the triangles to other sequences.
These transformations are called 'table traits' and are implemented in the module '_tabltraits'.

Classes:
  Rank: A NamedTuple representing the rank of a triangle with attributes:
    - anum: The A-number of the triangle.
    - name: The name of the triangle.
    - distinct: The number of distinct sequences found in the OEIS.
    - hits: The number of of all sequences found in the OEIS.
    - misses: The number of sequences not found in the OEIS.
Functions:
  Ranking() -> Dict[int, Rank]:
    Reads a JSON dictionary of triangle data, calculates the ranking based on distinct sequences, 
    hits, and misses, and prints the ranking.
    Returns:
      A dictionary where the key is the rank and the value is a Rank NamedTuple.
  ListOccurencest() -> None:
    Reads a JSON dictionary of triangle data, calculates the occurrences of sequences, and 
    prints the sequences that appear more than 10 times.
"""

from typing import Dict, NamedTuple    
from operator import itemgetter
from _tabldatabase import ReadJsonDict


# #@

class Rank(NamedTuple):
    anum: str
    name: str
    distinct: int
    hits: int
    misses: int

def Ranking() -> Dict[int, Rank]:

    globaldict: Dict[str, Dict[str, int]] = ReadJsonDict()
    ranks: list[Rank] = []

    for name in globaldict:
        v = list(globaldict[name].values())
        a = len(v)
        d = len(set(v))
        m = len([k for k in v if k == 0])
        w = v[0] if v[0] != 0 else v[4] # if not (0,0) then (1,1)
        anum = 'A' + str(w).rjust(6, "0")
        ranks.append(Rank(anum, name, d, a - m, m))

    sorted_ranks = sorted(ranks, key=itemgetter(2), reverse=True)
    Rankings = {n: r for n, r in enumerate(sorted_ranks)}

    # IO = "https://peterluschny.github.io/tabl" 
    print("\nRanking of triangles with regard to their impact:\n")
    print()
    print("|   | Name             |  OEIS |Distinct| Hits | Traits | Links |")
    print("| :-: | :---           | :---:  | :---:   |  :---: |  :---:  |  :---: |")
    for n, r in Rankings.items():
        print(f"| {(n+1):2}| {r.name}       |{r.anum}|  {r.distinct:2}    | {r.hits:2}| [All](https://peterluschny.github.io/tabl/{r.name}.html)   | [OEIS](https://peterluschny.github.io/tablInspector/{r.name}Traits.html) |")

    return Rankings


def ListOccurences() -> None:
    """
    Generates and prints a list of sequences that occur most frequently in a given dataset.
    This function reads a dictionary from a JSON file, where the keys are the names of 
    triangles and the values are dictionaries mapping traits to OEIS A-numbers. It then 
    counts the occurrences of each A-number and stores the names associated with each A-number. 
    If an A-number is associated with more than 10 triangles, it is added to a list along 
    with the count of the triangles. The list is sorted in descending order based on the 
    count and printed.
    """
    Occurences: Dict[int, list[str]] = {}
    globdict: Dict[str, Dict[str, int]] = ReadJsonDict()
    li: set[int] = set()
    for d in globdict.values():
        for name, anum in d.items():
            li.add(anum)
            if anum in Occurences: 
                Occurences[anum].append(name)
            else: 
                Occurences[anum] = [name]

    #print(sorted(li), len(li))  # show all sequences generated 
 
    w: list[tuple[str, int]] = []
    for anum, names in Occurences.items():
        if len(names) > 10:
          Anum = 'A' + str(anum).rjust(6, "0")
          w.append((Anum, len(names)))

    # Show a list of the sequences most often found.
    w.sort(key = lambda r: r[1], reverse=True)
    for r in w[1:]: print(r)


if __name__ == "__main__":
    # Ranking()
    ListOccurences()

""" 
# The most influential triangles in the OEIS database.

The ranking is based on the number of distinct sequences that can be 
generated by a fixed pool of elementary transformations mapping the 
triangles to other sequences. These transformations are called 'table 
traits' and are implemented in the module '_tabltraits'.

In this way, each of the 50 most highly ranked triangles generates, 
on average, 35 different related sequences registered in the OEIS. 
Thus, a high rank means the triangle is a significant structural 
component in the OEIS database and binds seemingly unrelated sequences
into a semantically meaningful cluster.

Currently, 116 triangles are included in this ranking. The top 55 
triangles are listed below.


*** Premier League ***

[ 0] StirlingSet       [A048993]  Distinct: 51, Hits: 60, Misses:  7.
[ 1] FallingFactorial  [A008279]  Distinct: 48, Hits: 59, Misses:  7.
[ 2] Lah               [A271703]  Distinct: 46, Hits: 54, Misses: 12.
[ 3] BinaryPell        [A038207]  Distinct: 45, Hits: 54, Misses: 12.
[ 4] Lucas             [A029635]  Distinct: 44, Hits: 59, Misses:  6.
[ 5] Partition         [A072233]  Distinct: 43, Hits: 53, Misses: 14.
[ 6] Fubini            [A131689]  Distinct: 42, Hits: 49, Misses: 16.
[ 7] StirlingCycle     [A132393]  Distinct: 42, Hits: 60, Misses:  6.
[ 8] CatalanInv        [A128908]  Distinct: 41, Hits: 47, Misses: 19.
[ 9] Ordinals          [A002262]  Distinct: 40, Hits: 65, Misses:  0.
[10] DyckPathsInv      [A085478]  Distinct: 40, Hits: 52, Misses: 16.
[11] Powers            [A004248]  Distinct: 39, Hits: 48, Misses: 19.
[12] Motzkin           [A064189]  Distinct: 38, Hits: 47, Misses: 19.
[13] BesselInv         [A122848]  Distinct: 37, Hits: 46, Misses: 20.
[14] DyckPaths         [A039599]  Distinct: 37, Hits: 48, Misses: 18.
[15] Eulerian          [A173018]  Distinct: 37, Hits: 55, Misses: 12.
[16] Catalan           [A128899]  Distinct: 36, Hits: 42, Misses: 24.

*** Second Division ***

[17] Laguerre          [A021009]  Distinct: 36, Hits: 42, Misses: 24.
[18] Monotone          [A059481]  Distinct: 36, Hits: 50, Misses: 16.
[19] Narayana          [A090181]  Distinct: 36, Hits: 54, Misses: 13.
[20] AbelInv           [A059297]  Distinct: 35, Hits: 40, Misses: 26.
[21] Divisibility      [A113704]  Distinct: 35, Hits: 55, Misses: 12.
[22] Nicomachus        [A036561]  Distinct: 34, Hits: 41, Misses: 23.
[23] OrderedCycle      [A225479]  Distinct: 34, Hits: 38, Misses: 26.
[24] Schroeder         [A122538]  Distinct: 34, Hits: 42, Misses: 24.
[25] Bessel            [A132062]  Distinct: 33, Hits: 39, Misses: 27.
[26] BinomialBell      [A056857]  Distinct: 33, Hits: 39, Misses: 26.
[27] BinomialCatalan   [A098474]  Distinct: 33, Hits: 38, Misses: 28.
[28] CatalanPaths      [A053121]  Distinct: 33, Hits: 50, Misses: 16.
[29] ChebyshevS        [A168561]  Distinct: 33, Hits: 47, Misses: 19.
[30] LeibnizTable      [A094053]  Distinct: 32, Hits: 51, Misses: 13.
[31] Rencontres        [A008290]  Distinct: 32, Hits: 42, Misses: 24.
[32] LucasInv          [A112857]  Distinct: 31, Hits: 41, Misses: 27.
[33] Worpitzky         [A028246]  Distinct: 31, Hits: 41, Misses: 25.

*** Third Division ***

[34] SchroederP        [A104684]  Distinct: 30, Hits: 34, Misses: 32.
[35] ChebyshevT        [A053120]  Distinct: 29, Hits: 43, Misses: 21.
[36] MotzkinInv        [A101950]  Distinct: 28, Hits: 39, Misses: 27.
[37] MotzkinPoly       [A359364]  Distinct: 28, Hits: 41, Misses: 25.
[38] PartitionDist     [A008289]  Distinct: 28, Hits: 41, Misses: 24.
[39] Bell              [A011971]  Distinct: 27, Hits: 37, Misses: 27.
[40] ChebyshevU        [A115322]  Distinct: 27, Hits: 38, Misses: 26.
[41] Euler             [A109449]  Distinct: 27, Hits: 36, Misses: 30.
[42] StirlingCycleB    [A028338]  Distinct: 27, Hits: 38, Misses: 28.
[43] Binomial          [A007318]  Distinct: 26, Hits: 68, Misses:  0.
[44] Bessel2           [A359760]  Distinct: 25, Hits: 41, Misses: 25.
[45] Delannoy          [A008288]  Distinct: 25, Hits: 49, Misses: 19.
[46] DoublePochhammer  [A039683]  Distinct: 25, Hits: 31, Misses: 35.
[47] Eulerian2         [A201637]  Distinct: 25, Hits: 31, Misses: 34.
[48] EulerSec          [A119879]  Distinct: 25, Hits: 37, Misses: 29.
[49] FiboLucas         [A374439]  Distinct: 25, Hits: 30, Misses: 36.
[50] HermiteE          [A099174]  Distinct: 25, Hits: 40, Misses: 26.
[51] Leibniz           [A003506]  Distinct: 25, Hits: 56, Misses:  8.
[52] Moebius           [A363914]  Distinct: 25, Hits: 52, Misses: 14.
[53] Euclid            [A217831]  Distinct: 24, Hits: 61, Misses:  4.
[54] PartitionDistSize [A365676]  Distinct: 24, Hits: 36, Misses: 28.
[55] Composition       [A048004]  Distinct: 23, Hits: 28, Misses: 39.


# Efficiency

To give an idea of the performance of the library, we provide the 
following table that shows the time required to calculate the first 
100 rows of each triangle which corresponds to the calculation of 
the first 5050 terms.

             Abel 0.0050 sec
          AbelInv 0.0023 sec
            Andre 0.0376 sec
           Baxter 0.0120 sec
             Bell 0.0011 sec
           Bessel 0.0019 sec
        BesselInv 0.0016 sec
          Bessel2 0.0012 sec
       BinaryPell 0.0021 sec
         Binomial 0.0002 sec
      BinomialInv 0.0023 sec
     BinomialBell 0.0027 sec
  BinomialCatalan 0.0031 sec
     BinomialPell 0.0019 sec
 BinomialDiffPell 0.0045 sec
          Catalan 0.0021 sec
       CatalanInv 0.0020 sec
     CatalanPaths 0.0038 sec
     CentralCycle 0.0021 sec
       CentralSet 0.0028 sec
    CentralSetInv 0.0059 sec
           Chains 0.0030 sec
         Charlier 0.0029 sec
       ChebyshevS 0.0009 sec
       ChebyshevT 0.0017 sec
       ChebyshevU 0.0025 sec
      Composition 0.0252 sec
   CompositionAcc 0.0008 sec
  CompositionDist 0.0037 sec
            CTree 0.0004 sec
         Delannoy 0.0017 sec
      DelannoyInv 0.0018 sec
     DistLattices 0.0819 sec
     Divisibility 0.0019 sec
 DoublePochhammer 0.0023 sec
        DyckPaths 0.0025 sec
     DyckPathsInv 0.0021 sec
        Entringer 0.0014 sec
           Euclid 0.0064 sec
            Euler 0.0047 sec
         Eulerian 0.0028 sec
        Eulerian2 0.0029 sec
        EulerianB 0.0028 sec
   EulerianZigZag 0.2956 sec
         EulerSec 0.0022 sec
         EulerTan 0.0022 sec
   EytzingerOrder 0.0026 sec
    EytzingerPerm 0.0015 sec
 FallingFactorial 0.0020 sec
        FiboLucas 0.0017 sec
     FiboLucasInv 0.0017 sec
     FiboLucasRev 0.0004 sec
        Fibonacci 0.0015 sec
           Fubini 0.0051 sec
      FussCatalan 0.0011 sec
          Gaussq2 0.0032 sec
         Genocchi 0.0034 sec
         Harmonic 0.0018 sec
         HermiteE 0.0016 sec
         HermiteH 0.0019 sec
    HyperHarmonic 0.0041 sec
       Jacobsthal 0.0025 sec
    LabeledGraphs 0.0245 sec
         Laguerre 0.0019 sec
              Lah 0.0017 sec
           Lehmer 0.2069 sec
          Leibniz 0.0017 sec
     LeibnizTable 0.0008 sec
            Levin 0.0023 sec
          Lozanic 0.0014 sec
            Lucas 0.0011 sec
         LucasInv 0.0036 sec
        LucasPoly 0.0015 sec
          Moebius 0.0025 sec
         Monotone 0.0025 sec
          Motzkin 0.0026 sec
       MotzkinInv 0.0016 sec
      MotzkinPoly 0.0010 sec
         Narayana 0.0044 sec
        Narayana2 0.0044 sec
         Naturals 0.0012 sec
       Nicomachus 0.0012 sec
           NimSum 0.0006 sec
              One 0.0002 sec
         Ordinals 0.0002 sec
     OrderedCycle 0.0032 sec
          Parades 0.0659 sec
        Partition 0.0453 sec
     PartitionAcc 0.0006 sec
    PartitionDist 0.0022 sec
PartitionDistSize 0.2718 sec
           Pascal 0.0010 sec
     PolyaTreeAcc 0.5054 sec
        PolyaTree 0.0011 sec
        Polygonal 0.0010 sec
      PowLaguerre 0.0029 sec
           Powers 0.0002 sec
       Rencontres 0.0029 sec
    RencontresInv 0.0018 sec
  RisingFactorial 0.0016 sec
       RootedTree 0.0020 sec
        Schroeder 0.0017 sec
       SchroederL 0.0041 sec
       SchroederP 0.0022 sec
           Seidel 0.0005 sec
       Sierpinski 0.0031 sec
    StirlingCycle 0.0021 sec
   StirlingCycle2 0.0011 sec
   StirlingCycleB 0.0018 sec
      StirlingSet 0.0018 sec
     StirlingSet2 0.0014 sec
     StirlingSetB 0.0066 sec
        Sylvester 0.1923 sec
     TernaryTrees 0.0012 sec
          WardSet 0.0025 sec
        WardCycle 0.0021 sec
        Worpitzky 0.0028 sec


# List of OEIS A-numbers implemented.

'A000012', 'A001263', 'A001497', 'A001498', 'A002260', 'A002262', 'A004248', 'A004736', 'A008275', 'A008276', 'A008277', 'A008278', 'A008279', 'A008284', 'A008288', 'A008290', 'A008292', 'A008297', 'A008836', 'A009766', 'A009998', 'A014077', 'A019538', 'A021009', 'A021010', 'A025581', 'A026300', 'A027555', 'A028246', 'A028338', 'A033877', 'A038207', 'A039598', 'A039599', 'A039683', 'A039757', 'A039758', 'A046716', 'A048594', 'A048993', 'A048994', 'A049310', 'A050155', 'A051129', 'A051731', 'A052173', 'A053119', 'A053121', 'A053122', 'A053440', 'A054525', 'A054654', 'A055137', 'A056857', 'A056860', 'A058398', 'A059297', 'A059298', 'A059481', 'A061356', 'A063007', 'A064189', 'A066667', 'A068424', 'A072233', 'A075181', 'A075263', 'A080245', 'A080247', 'A080417', 'A081658', 'A089231', 'A090181', 'A090582', 'A094587', 'A094638', 'A094816', 'A096713', 'A098474', 'A098825', 'A104556', 'A104684', 'A105278', 'A106465', 'A106470', 'A106579', 'A106800', 'A109692', 'A111596', 'A112552', 'A112554', 'A113704', 'A119879', 'A122538', 'A122848', 'A122850', 'A123125', 'A124644', 'A128899', 'A128908', 'A130534', 'A130850', 'A131198', 'A131689', 'A132062', 'A132393', 'A137452', 'A139526', 'A144084', 'A151511', 'A151512', 'A153641', 'A154959', 'A163626', 'A168561', 'A173018', 'A173333', 'A181511', 'A213735', 'A225479', 'A271703', 'A278075', 'A285072', 'A322378', 'A363914'

"""